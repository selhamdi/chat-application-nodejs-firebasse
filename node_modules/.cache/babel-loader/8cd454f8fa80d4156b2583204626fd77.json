{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\react-js-chat-webapp-example-master\\\\src\\\\components\\\\AddRoom.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Alert, Jumbotron, Spinner, Form, Button, FormGroup, Label, Input } from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction AddRoom() {\n  const history = useHistory();\n  const [room, setRoom] = useState({\n    roomname: ''\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const ref = firebase.database().ref('rooms/');\n\n  const save = e => {\n    e.preventDefault();\n    setShowLoading(true);\n    ref.orderByChild('roomname').equalTo(room.roomname).once('value', snapshot => {\n      if (snapshot.exists()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Alert, {\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, \"Room name already exist!\"));\n      } else {\n        const newRoom = firebase.database().ref('rooms/').push();\n        newRoom.set(room);\n        history.goBack();\n        setShowLoading(false);\n      }\n    });\n  };\n\n  const onChange = e => {\n    e.persist();\n    setRoom({ ...room,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Please enter new Room\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Room Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"roomname\",\n    id: \"roomname\",\n    placeholder: \"Enter Room Name\",\n    value: room.roomname,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Add\"))));\n}\n\nexport default AddRoom;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-js-chat-webapp-example-master/src/components/AddRoom.js"],"names":["React","useState","useHistory","Alert","Jumbotron","Spinner","Form","Button","FormGroup","Label","Input","firebase","AddRoom","history","room","setRoom","roomname","showLoading","setShowLoading","ref","database","save","e","preventDefault","orderByChild","equalTo","once","snapshot","exists","newRoom","push","set","goBack","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    useHistory\n} from \"react-router-dom\";\nimport {\n    Alert,\n    Jumbotron,\n    Spinner,\n    Form,\n    Button,\n    FormGroup, \n    Label, \n    Input\n} from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction AddRoom() {\n    const history = useHistory();\n    const [room, setRoom] = useState({ roomname: '' });\n    const [showLoading, setShowLoading] = useState(false);\n    const ref = firebase.database().ref('rooms/');\n\n    const save = (e) => {\n        e.preventDefault();\n        setShowLoading(true);\n        ref.orderByChild('roomname').equalTo(room.roomname).once('value', snapshot => {\n            if (snapshot.exists()) {\n                return (\n                    <div>\n                        <Alert color=\"primary\">\n                            Room name already exist!\n                        </Alert>\n                    </div>\n                );\n            } else {\n                const newRoom = firebase.database().ref('rooms/').push();\n                newRoom.set(room);\n                history.goBack();\n                setShowLoading(false);\n            }\n        });\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setRoom({...room, [e.target.name]: e.target.value});\n    }\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner color=\"primary\" />\n            }\n            <Jumbotron>\n                <h2>Please enter new Room</h2>\n                <Form onSubmit={save}>\n                    <FormGroup>\n                        <Label>Room Name</Label>\n                        <Input type=\"text\" name=\"roomname\" id=\"roomname\" placeholder=\"Enter Room Name\" value={room.roomname} onChange={onChange} />\n                    </FormGroup>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Add\n                    </Button>\n                </Form>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}